---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { SEO } from "astro-seo";
import 'bootstrap/dist/css/bootstrap.min.css';
import 'bootstrap-icons/font/bootstrap-icons.css';

import '../styles/global.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Card from '../components/Card.astro';
import BackToTop from '../components/BackToTop.astro';
import Kucing from '../assets/kucing.webp';

const { title, description, category, heading } = Astro.props;
const blogPosts = await getCollection('blog');
type BlogPost = CollectionEntry<'blog'>;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />

		<slot name="seo" />
		
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
	</head>
	<body>

		<Header />

		<slot />
    
  	<SEO
	  	slot="seo"
      title={title}
      description={description}
      openGraph={{
        basic: {
          title: title,
          type: "Website",
          image: Kucing.src,
        }
      }}
    />

	  <main class="container mt-content col-md-10 col-xl-8 offset-md-1 offset-xl-2">

      <h1 class="fs-1 mb-5">{heading}</h1>
		  <div class="d-flex flex-column gap-3">
			  {
  				blogPosts
            .filter((post) => post.data.category === category)
		  			.sort((a, b) => (b.data.index ?? 0) - (a.data.index ?? 0))
			  		.map((post: BlogPost) => (
				  		<div class="col">
					  		<Card post={post} slugNested={true} />
						  </div>
  					))
	  		}
		  </div>
	  </main>

		<BackToTop />

		<Footer />

	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" is:inline></script>
